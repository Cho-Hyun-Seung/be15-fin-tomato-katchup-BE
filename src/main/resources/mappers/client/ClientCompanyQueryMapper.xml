<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="be15fintomatokatchupbe.client.query.mapper.ClientCompanyQueryMapper">

    <select id="findClientCompanyDetailById" resultMap="ClientCompanyDetailResultMap">
        SELECT
            cc.client_company_id AS clientCompanyId,
            cc.client_company_name AS clientCompanyName,
            cc.client_company_status_id AS clientCompanyStatusId,
            cc.business_id,
            cc.sales,
            cc.number_of_employees,
            cc.telephone,
            cc.fax,
            cc.address,
            cc.detail_address,
            cc.notes,

            cm.client_manager_id AS managerId,
            cm.name AS managerName,
            cm.department AS managerDepartment,
            cm.position AS managerPosition,
            cm.phone AS managerPhone,
            cm.telephone AS managerTelephone,
            cm.email AS managerEmail,
            cm.notes AS managerNotes,

            cu.user_id AS userId

        FROM client_company cc
                 LEFT JOIN client_manager cm ON cc.client_company_id = cm.client_company_id AND cm.is_deleted = 'N'
                 LEFT JOIN client_company_user cu ON cc.client_company_id = cu.client_company_id
        WHERE cc.client_company_id = #{clientCompanyId}
          AND cc.is_deleted = 'N'
    </select>

    <resultMap id="ClientCompanyDetailResultMap" type="be15fintomatokatchupbe.client.query.dto.ClientCompanyDetailResponse">
        <id property="clientCompanyId" column="clientCompanyId"/>
        <result property="clientCompanyName" column="clientCompanyName"/>
        <result property="clientCompanyStatusId" column="clientCompanyStatusId"/>
        <result property="businessId" column="business_id"/>
        <result property="sales" column="sales"/>
        <result property="numberOfEmployees" column="number_of_employees"/>
        <result property="telephone" column="telephone"/>
        <result property="fax" column="fax"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detail_address"/>
        <result property="notes" column="notes"/>

        <!-- userId list는 따로 resultHandler로 처리 -->
        <collection property="userIds" ofType="java.lang.Long">
            <result column="userId"/>
        </collection>

        <collection property="clientManagers" ofType="be15fintomatokatchupbe.client.query.dto.ClientManagerResponse">
            <result property="clientManagerId" column="managerId"/>
            <result property="name" column="managerName"/>
            <result property="department" column="managerDepartment"/>
            <result property="position" column="managerPosition"/>
            <result property="phone" column="managerPhone"/>
            <result property="telephone" column="managerTelephone"/>
            <result property="email" column="managerEmail"/>
            <result property="notes" column="managerNotes"/>
        </collection>
    </resultMap>

    <!-- 사원 목록 조회 -->
    <select id="findManagersByClientCompanyId" resultType="be15fintomatokatchupbe.client.query.dto.ClientManagerSimpleResponse">
        SELECT
            cm.client_company_id AS clientCompanyId,
            cm.client_manager_id AS clientManagerId,
            cm.name
        FROM client_manager cm
        WHERE cm.client_company_id = #{clientCompanyId}
          AND cm.is_deleted = 'N'
    </select>

    <!-- 해당 고객사의 담당자 목록 조회 -->
    <select id="findUsersByClientCompanyId" resultType="be15fintomatokatchupbe.client.query.dto.ClientCompanyUserResponse">
        SELECT
            cu.client_company_id AS clientCompanyId,
            u.user_id AS userId,
            u.name AS userName
        FROM client_company_user cu
        JOIN user u ON cu.user_id = u.user_id
        WHERE cu.client_company_id = #{clientCompanyId}
    </select>

    <!-- 고객사 목록 조회 -->
    <select id="findClientCompanyList" resultType="be15fintomatokatchupbe.client.query.dto.ClientCompanyListResponse">
        SELECT
            cc.client_company_id AS clientCompanyId,
            cc.client_company_name AS clientCompanyName,
            cc.sales,
            cc.address,
            cc.detail_address AS detailAddress,
            (
                SELECT COUNT(*)
                FROM client_manager cm
                WHERE cm.client_company_id = cc.client_company_id
                  AND cm.is_deleted = 'N'
            ) AS employeeCount,
            (
                SELECT u.name
                FROM client_company_user cu
                         JOIN user u ON cu.user_id = u.user_id
                WHERE cu.client_company_id = cc.client_company_id
                LIMIT 1
            ) AS userName
        FROM client_company cc
        WHERE cc.is_deleted = 'N'
        ORDER BY cc.client_company_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countClientCompanies" resultType="int">
        SELECT COUNT(*) FROM client_company cc WHERE cc.is_deleted = 'N'
    </select>

    <!-- 고객사 검색 필터링 -->
    <select id="searchClientCompanies" resultType="be15fintomatokatchupbe.client.query.dto.ClientCompanyListResponse">
        SELECT
        cc.client_company_id AS clientCompanyId,
        cc.client_company_name AS clientCompanyName,
        cc.sales,
        cc.address,
        cc.detail_address AS detailAddress,
        (
        SELECT COUNT(*) FROM client_manager cm
        WHERE cm.client_company_id = cc.client_company_id AND cm.is_deleted = 'N'
        ) AS employeeCount,
        (
        SELECT GROUP_CONCAT(u.name SEPARATOR ', ')
        FROM client_company_user cu
        JOIN user u ON cu.user_id = u.user_id
        WHERE cu.client_company_id = cc.client_company_id
        ) AS userName
        FROM client_company cc
        WHERE cc.is_deleted = 'N'

        <if test="condition.statusId != null">
            AND cc.client_company_status_id = #{condition.statusId}
        </if>

        <if test="condition.keyword != null and condition.keyword != ''">
            AND (
            cc.client_company_name LIKE CONCAT('%', #{condition.keyword}, '%')
            OR EXISTS (
            SELECT 1
            FROM client_company_user cu
            JOIN user u ON cu.user_id = u.user_id
            WHERE cu.client_company_id = cc.client_company_id
            AND u.name LIKE CONCAT('%', #{condition.keyword}, '%')
            )
            )
        </if>

        <if test="condition.minSales != null">
            AND cc.sales &gt;= #{condition.minSales}
        </if>

        <if test="condition.maxSales != null">
            AND cc.sales &lt;= #{condition.maxSales}
        </if>

        <if test="condition.startDate != null">
            AND cc.created_at &gt;= #{condition.startDate}
        </if>

        <if test="condition.endDate != null">
            AND cc.created_at &lt;= #{condition.endDate}
        </if>

        ORDER BY cc.client_company_id DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 이메일 보낼 고객의 이름과 이메일 리스트 조회 -->

</mapper>